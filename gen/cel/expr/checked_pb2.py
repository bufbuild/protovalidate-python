# Copyright 2023-2025 Buf Technologies, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cel/expr/checked.proto
# Protobuf Python Version: 6.30.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    30,
    1,
    '',
    'cel/expr/checked.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from cel.expr import syntax_pb2 as cel_dot_expr_dot_syntax__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x16\x63\x65l/expr/checked.proto\x12\x08\x63\x65l.expr\x1a\x15\x63\x65l/expr/syntax.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xba\x03\n\x0b\x43heckedExpr\x12L\n\rreference_map\x18\x02 \x03(\x0b\x32\'.cel.expr.CheckedExpr.ReferenceMapEntryR\x0creferenceMap\x12=\n\x08type_map\x18\x03 \x03(\x0b\x32\".cel.expr.CheckedExpr.TypeMapEntryR\x07typeMap\x12\x35\n\x0bsource_info\x18\x05 \x01(\x0b\x32\x14.cel.expr.SourceInfoR\nsourceInfo\x12!\n\x0c\x65xpr_version\x18\x06 \x01(\tR\x0b\x65xprVersion\x12\"\n\x04\x65xpr\x18\x04 \x01(\x0b\x32\x0e.cel.expr.ExprR\x04\x65xpr\x1aT\n\x11ReferenceMapEntry\x12\x10\n\x03key\x18\x01 \x01(\x03R\x03key\x12)\n\x05value\x18\x02 \x01(\x0b\x32\x13.cel.expr.ReferenceR\x05value:\x02\x38\x01\x1aJ\n\x0cTypeMapEntry\x12\x10\n\x03key\x18\x01 \x01(\x03R\x03key\x12$\n\x05value\x18\x02 \x01(\x0b\x32\x0e.cel.expr.TypeR\x05value:\x02\x38\x01\"\xe6\t\n\x04Type\x12*\n\x03\x64yn\x18\x01 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00R\x03\x64yn\x12\x30\n\x04null\x18\x02 \x01(\x0e\x32\x1a.google.protobuf.NullValueH\x00R\x04null\x12<\n\tprimitive\x18\x03 \x01(\x0e\x32\x1c.cel.expr.Type.PrimitiveTypeH\x00R\tprimitive\x12\x38\n\x07wrapper\x18\x04 \x01(\x0e\x32\x1c.cel.expr.Type.PrimitiveTypeH\x00R\x07wrapper\x12=\n\nwell_known\x18\x05 \x01(\x0e\x32\x1c.cel.expr.Type.WellKnownTypeH\x00R\twellKnown\x12\x36\n\tlist_type\x18\x06 \x01(\x0b\x32\x17.cel.expr.Type.ListTypeH\x00R\x08listType\x12\x33\n\x08map_type\x18\x07 \x01(\x0b\x32\x16.cel.expr.Type.MapTypeH\x00R\x07mapType\x12\x39\n\x08\x66unction\x18\x08 \x01(\x0b\x32\x1b.cel.expr.Type.FunctionTypeH\x00R\x08\x66unction\x12#\n\x0cmessage_type\x18\t \x01(\tH\x00R\x0bmessageType\x12\x1f\n\ntype_param\x18\n \x01(\tH\x00R\ttypeParam\x12$\n\x04type\x18\x0b \x01(\x0b\x32\x0e.cel.expr.TypeH\x00R\x04type\x12.\n\x05\x65rror\x18\x0c \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00R\x05\x65rror\x12\x42\n\rabstract_type\x18\x0e \x01(\x0b\x32\x1b.cel.expr.Type.AbstractTypeH\x00R\x0c\x61\x62stractType\x1a\x37\n\x08ListType\x12+\n\telem_type\x18\x01 \x01(\x0b\x32\x0e.cel.expr.TypeR\x08\x65lemType\x1a\x63\n\x07MapType\x12)\n\x08key_type\x18\x01 \x01(\x0b\x32\x0e.cel.expr.TypeR\x07keyType\x12-\n\nvalue_type\x18\x02 \x01(\x0b\x32\x0e.cel.expr.TypeR\tvalueType\x1al\n\x0c\x46unctionType\x12/\n\x0bresult_type\x18\x01 \x01(\x0b\x32\x0e.cel.expr.TypeR\nresultType\x12+\n\targ_types\x18\x02 \x03(\x0b\x32\x0e.cel.expr.TypeR\x08\x61rgTypes\x1a[\n\x0c\x41\x62stractType\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x37\n\x0fparameter_types\x18\x02 \x03(\x0b\x32\x0e.cel.expr.TypeR\x0eparameterTypes\"s\n\rPrimitiveType\x12\x1e\n\x1aPRIMITIVE_TYPE_UNSPECIFIED\x10\x00\x12\x08\n\x04\x42OOL\x10\x01\x12\t\n\x05INT64\x10\x02\x12\n\n\x06UINT64\x10\x03\x12\n\n\x06\x44OUBLE\x10\x04\x12\n\n\x06STRING\x10\x05\x12\t\n\x05\x42YTES\x10\x06\"V\n\rWellKnownType\x12\x1f\n\x1bWELL_KNOWN_TYPE_UNSPECIFIED\x10\x00\x12\x07\n\x03\x41NY\x10\x01\x12\r\n\tTIMESTAMP\x10\x02\x12\x0c\n\x08\x44URATION\x10\x03\x42\x0b\n\ttype_kind\"\xd4\x04\n\x04\x44\x65\x63l\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x30\n\x05ident\x18\x02 \x01(\x0b\x32\x18.cel.expr.Decl.IdentDeclH\x00R\x05ident\x12\x39\n\x08\x66unction\x18\x03 \x01(\x0b\x32\x1b.cel.expr.Decl.FunctionDeclH\x00R\x08\x66unction\x1ak\n\tIdentDecl\x12\"\n\x04type\x18\x01 \x01(\x0b\x32\x0e.cel.expr.TypeR\x04type\x12(\n\x05value\x18\x02 \x01(\x0b\x32\x12.cel.expr.ConstantR\x05value\x12\x10\n\x03\x64oc\x18\x03 \x01(\tR\x03\x64oc\x1a\xd0\x02\n\x0c\x46unctionDecl\x12\x42\n\toverloads\x18\x01 \x03(\x0b\x32$.cel.expr.Decl.FunctionDecl.OverloadR\toverloads\x12\x10\n\x03\x64oc\x18\x02 \x01(\tR\x03\x64oc\x1a\xe9\x01\n\x08Overload\x12\x1f\n\x0boverload_id\x18\x01 \x01(\tR\noverloadId\x12&\n\x06params\x18\x02 \x03(\x0b\x32\x0e.cel.expr.TypeR\x06params\x12\x1f\n\x0btype_params\x18\x03 \x03(\tR\ntypeParams\x12/\n\x0bresult_type\x18\x04 \x01(\x0b\x32\x0e.cel.expr.TypeR\nresultType\x12\x30\n\x14is_instance_function\x18\x05 \x01(\x08R\x12isInstanceFunction\x12\x10\n\x03\x64oc\x18\x06 \x01(\tR\x03\x64ocB\x0b\n\tdecl_kind\"j\n\tReference\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n\x0boverload_id\x18\x03 \x03(\tR\noverloadId\x12(\n\x05value\x18\x04 \x01(\x0b\x32\x12.cel.expr.ConstantR\x05valueBn\n\x0c\x63om.cel.exprB\x0c\x43heckedProtoP\x01Z\x0c\x63\x65l.dev/expr\xf8\x01\x01\xa2\x02\x03\x43\x45X\xaa\x02\x08\x43\x65l.Expr\xca\x02\x08\x43\x65l\\Expr\xe2\x02\x14\x43\x65l\\Expr\\GPBMetadata\xea\x02\tCel::Exprb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'cel.expr.checked_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\014com.cel.exprB\014CheckedProtoP\001Z\014cel.dev/expr\370\001\001\242\002\003CEX\252\002\010Cel.Expr\312\002\010Cel\\Expr\342\002\024Cel\\Expr\\GPBMetadata\352\002\tCel::Expr'
  _globals['_CHECKEDEXPR_REFERENCEMAPENTRY']._loaded_options = None
  _globals['_CHECKEDEXPR_REFERENCEMAPENTRY']._serialized_options = b'8\001'
  _globals['_CHECKEDEXPR_TYPEMAPENTRY']._loaded_options = None
  _globals['_CHECKEDEXPR_TYPEMAPENTRY']._serialized_options = b'8\001'
  _globals['_CHECKEDEXPR']._serialized_start=119
  _globals['_CHECKEDEXPR']._serialized_end=561
  _globals['_CHECKEDEXPR_REFERENCEMAPENTRY']._serialized_start=401
  _globals['_CHECKEDEXPR_REFERENCEMAPENTRY']._serialized_end=485
  _globals['_CHECKEDEXPR_TYPEMAPENTRY']._serialized_start=487
  _globals['_CHECKEDEXPR_TYPEMAPENTRY']._serialized_end=561
  _globals['_TYPE']._serialized_start=564
  _globals['_TYPE']._serialized_end=1818
  _globals['_TYPE_LISTTYPE']._serialized_start=1241
  _globals['_TYPE_LISTTYPE']._serialized_end=1296
  _globals['_TYPE_MAPTYPE']._serialized_start=1298
  _globals['_TYPE_MAPTYPE']._serialized_end=1397
  _globals['_TYPE_FUNCTIONTYPE']._serialized_start=1399
  _globals['_TYPE_FUNCTIONTYPE']._serialized_end=1507
  _globals['_TYPE_ABSTRACTTYPE']._serialized_start=1509
  _globals['_TYPE_ABSTRACTTYPE']._serialized_end=1600
  _globals['_TYPE_PRIMITIVETYPE']._serialized_start=1602
  _globals['_TYPE_PRIMITIVETYPE']._serialized_end=1717
  _globals['_TYPE_WELLKNOWNTYPE']._serialized_start=1719
  _globals['_TYPE_WELLKNOWNTYPE']._serialized_end=1805
  _globals['_DECL']._serialized_start=1821
  _globals['_DECL']._serialized_end=2417
  _globals['_DECL_IDENTDECL']._serialized_start=1958
  _globals['_DECL_IDENTDECL']._serialized_end=2065
  _globals['_DECL_FUNCTIONDECL']._serialized_start=2068
  _globals['_DECL_FUNCTIONDECL']._serialized_end=2404
  _globals['_DECL_FUNCTIONDECL_OVERLOAD']._serialized_start=2171
  _globals['_DECL_FUNCTIONDECL_OVERLOAD']._serialized_end=2404
  _globals['_REFERENCE']._serialized_start=2419
  _globals['_REFERENCE']._serialized_end=2525
# @@protoc_insertion_point(module_scope)
