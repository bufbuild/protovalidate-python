# Copyright 2023 Buf Technologies, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: buf/validate/conformance/harness/harness.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from buf.validate import expression_pb2 as buf_dot_validate_dot_expression__pb2
from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from google.protobuf import descriptor_pb2 as google_dot_protobuf_dot_descriptor__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n.buf/validate/conformance/harness/harness.proto\x12 buf.validate.conformance.harness\x1a\x1d\x62uf/validate/expression.proto\x1a\x19google/protobuf/any.proto\x1a google/protobuf/descriptor.proto\"\xfd\x01\n\x16TestConformanceRequest\x12\x38\n\x05\x66\x64set\x18\x02 \x01(\x0b\x32\".google.protobuf.FileDescriptorSetR\x05\x66\x64set\x12Y\n\x05\x63\x61ses\x18\x03 \x03(\x0b\x32\x43.buf.validate.conformance.harness.TestConformanceRequest.CasesEntryR\x05\x63\x61ses\x1aN\n\nCasesEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12*\n\x05value\x18\x02 \x01(\x0b\x32\x14.google.protobuf.AnyR\x05value:\x02\x38\x01\"\xe5\x01\n\x17TestConformanceResponse\x12`\n\x07results\x18\x01 \x03(\x0b\x32\x46.buf.validate.conformance.harness.TestConformanceResponse.ResultsEntryR\x07results\x1ah\n\x0cResultsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x42\n\x05value\x18\x02 \x01(\x0b\x32,.buf.validate.conformance.harness.TestResultR\x05value:\x02\x38\x01\"\xfc\x01\n\nTestResult\x12\x1a\n\x07success\x18\x01 \x01(\x08H\x00R\x07success\x12\x45\n\x10validation_error\x18\x02 \x01(\x0b\x32\x18.buf.validate.ViolationsH\x00R\x0fvalidationError\x12-\n\x11\x63ompilation_error\x18\x03 \x01(\tH\x00R\x10\x63ompilationError\x12%\n\rruntime_error\x18\x04 \x01(\tH\x00R\x0cruntimeError\x12+\n\x10unexpected_error\x18\x05 \x01(\tH\x00R\x0funexpectedErrorB\x08\n\x06resultb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'buf.validate.conformance.harness.harness_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _TESTCONFORMANCEREQUEST_CASESENTRY._options = None
  _TESTCONFORMANCEREQUEST_CASESENTRY._serialized_options = b'8\001'
  _TESTCONFORMANCERESPONSE_RESULTSENTRY._options = None
  _TESTCONFORMANCERESPONSE_RESULTSENTRY._serialized_options = b'8\001'
  _globals['_TESTCONFORMANCEREQUEST']._serialized_start=177
  _globals['_TESTCONFORMANCEREQUEST']._serialized_end=430
  _globals['_TESTCONFORMANCEREQUEST_CASESENTRY']._serialized_start=352
  _globals['_TESTCONFORMANCEREQUEST_CASESENTRY']._serialized_end=430
  _globals['_TESTCONFORMANCERESPONSE']._serialized_start=433
  _globals['_TESTCONFORMANCERESPONSE']._serialized_end=662
  _globals['_TESTCONFORMANCERESPONSE_RESULTSENTRY']._serialized_start=558
  _globals['_TESTCONFORMANCERESPONSE_RESULTSENTRY']._serialized_end=662
  _globals['_TESTRESULT']._serialized_start=665
  _globals['_TESTRESULT']._serialized_end=917
# @@protoc_insertion_point(module_scope)
