# Copyright 2023-2025 Buf Technologies, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: tests/example/v1/predefined.proto
# Protobuf Python Version: 6.30.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    30,
    1,
    '',
    'tests/example/v1/predefined.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n!tests/example/v1/predefined.proto\x12\x10tests.example.v1\x1a\x1b\x62uf/validate/validate.proto:\xc3\x01\n\x05maxim\x12\x16.buf.validate.MapRules\x18\x88\x0e \x01(\x04\x42\x93\x01\xc2H\x8f\x01\n\x8c\x01\n\tmap.maxim\x1a\x7fuint(this.size()) > 2 ? \'map must be at most %s entries\'.format([{1: \'value1\', uint(2): \'keytruda\', true: double(\'NaN\')}]) : \'\'R\x05maxim:\xad\x01\n\x06maxim2\x12\x16.buf.validate.MapRules\x18\x89\x0e \x01(\x04\x42|\xc2Hy\nw\n\tmap.maxim\x1ajuint(this.size()) > 2 ? \'map must be at most %s entries\'.format([{1: \'value1\', uint(2): \'keytruda\'}]) : \'\'R\x06maxim2:\xb7\x01\n\x06maxim3\x12\x16.buf.validate.MapRules\x18\x8a\x0e \x01(\x04\x42\x85\x01\xc2H\x81\x01\n\x7f\n\tmap.maxim\x1aruint(this.size()) > 2 ? \'map must be at most %s entries\'.format([{uint(2): \'keytruda\', true: double(\'NaN\')}]) : \'\'R\x06maxim3:\xad\x01\n\x06maxim4\x12\x16.buf.validate.MapRules\x18\x8b\x0e \x01(\x04\x42|\xc2Hy\nw\n\tmap.maxim\x1ajuint(this.size()) > 2 ? \'map must be at most %s entries\'.format([{1: \'value1\', true: double(\'NaN\')}]) : \'\'R\x06maxim4:\xb4\x01\n\x06maxim5\x12\x16.buf.validate.MapRules\x18\x8c\x0e \x01(\x04\x42\x82\x01\xc2H\x7f\n}\n\tmap.maxim\x1apuint(this.size()) > 2 ? \'map must be at most %s entries\'.format([{uint(1): \'value1\', true: double(\'NaN\')}]) : \'\'R\x06maxim5:\xb4\x01\n\x06maxim6\x12\x16.buf.validate.MapRules\x18\x8d\x0e \x01(\x04\x42\x82\x01\xc2H\x7f\n}\n\tmap.maxim\x1apuint(this.size()) > 2 ? \'map must be at most %s entries\'.format([{uint(6): \'value1\', true: double(\'NaN\')}]) : \'\'R\x06maxim6:\xad\x01\n\x06maxim7\x12\x16.buf.validate.MapRules\x18\x8e\x0e \x01(\x04\x42|\xc2Hy\nw\n\tmap.maxim\x1ajuint(this.size()) > 2 ? \'map must be at most %s entries\'.format([{6: \'value1\', true: double(\'NaN\')}]) : \'\'R\x06maxim7:\xad\x01\n\x06maxim8\x12\x16.buf.validate.MapRules\x18\x8f\x0e \x01(\x04\x42|\xc2Hy\nw\n\tmap.maxim\x1ajuint(this.size()) > 2 ? \'map must be at most %s entries\'.format([{2: \'value1\', true: double(\'NaN\')}]) : \'\'R\x06maxim8:\xae\x01\n\x06maxim9\x12\x16.buf.validate.MapRules\x18\x90\x0e \x01(\x04\x42}\xc2Hz\nx\n\tmap.maxim\x1akuint(this.size()) > 2 ? \'map must be at most %s entries\'.format([{0: \'value1\', false: double(\'NaN\')}]) : \'\'R\x06maxim9B\x89\x01\n\x14\x63om.tests.example.v1B\x0fPredefinedProtoP\x01\xa2\x02\x03TEX\xaa\x02\x10Tests.Example.V1\xca\x02\x10Tests\\Example\\V1\xe2\x02\x1cTests\\Example\\V1\\GPBMetadata\xea\x02\x12Tests::Example::V1')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tests.example.v1.predefined_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\024com.tests.example.v1B\017PredefinedProtoP\001\242\002\003TEX\252\002\020Tests.Example.V1\312\002\020Tests\\Example\\V1\342\002\034Tests\\Example\\V1\\GPBMetadata\352\002\022Tests::Example::V1'
  _globals['maxim']._loaded_options = None
  _globals['maxim']._serialized_options = b'\302H\217\001\n\214\001\n\tmap.maxim\032\177uint(this.size()) > 2 ? \'map must be at most %s entries\'.format([{1: \'value1\', uint(2): \'keytruda\', true: double(\'NaN\')}]) : \'\''
  _globals['maxim2']._loaded_options = None
  _globals['maxim2']._serialized_options = b'\302Hy\nw\n\tmap.maxim\032juint(this.size()) > 2 ? \'map must be at most %s entries\'.format([{1: \'value1\', uint(2): \'keytruda\'}]) : \'\''
  _globals['maxim3']._loaded_options = None
  _globals['maxim3']._serialized_options = b'\302H\201\001\n\177\n\tmap.maxim\032ruint(this.size()) > 2 ? \'map must be at most %s entries\'.format([{uint(2): \'keytruda\', true: double(\'NaN\')}]) : \'\''
  _globals['maxim4']._loaded_options = None
  _globals['maxim4']._serialized_options = b'\302Hy\nw\n\tmap.maxim\032juint(this.size()) > 2 ? \'map must be at most %s entries\'.format([{1: \'value1\', true: double(\'NaN\')}]) : \'\''
  _globals['maxim5']._loaded_options = None
  _globals['maxim5']._serialized_options = b'\302H\177\n}\n\tmap.maxim\032puint(this.size()) > 2 ? \'map must be at most %s entries\'.format([{uint(1): \'value1\', true: double(\'NaN\')}]) : \'\''
  _globals['maxim6']._loaded_options = None
  _globals['maxim6']._serialized_options = b'\302H\177\n}\n\tmap.maxim\032puint(this.size()) > 2 ? \'map must be at most %s entries\'.format([{uint(6): \'value1\', true: double(\'NaN\')}]) : \'\''
  _globals['maxim7']._loaded_options = None
  _globals['maxim7']._serialized_options = b'\302Hy\nw\n\tmap.maxim\032juint(this.size()) > 2 ? \'map must be at most %s entries\'.format([{6: \'value1\', true: double(\'NaN\')}]) : \'\''
  _globals['maxim8']._loaded_options = None
  _globals['maxim8']._serialized_options = b'\302Hy\nw\n\tmap.maxim\032juint(this.size()) > 2 ? \'map must be at most %s entries\'.format([{2: \'value1\', true: double(\'NaN\')}]) : \'\''
  _globals['maxim9']._loaded_options = None
  _globals['maxim9']._serialized_options = b'\302Hz\nx\n\tmap.maxim\032kuint(this.size()) > 2 ? \'map must be at most %s entries\'.format([{0: \'value1\', false: double(\'NaN\')}]) : \'\''
# @@protoc_insertion_point(module_scope)
